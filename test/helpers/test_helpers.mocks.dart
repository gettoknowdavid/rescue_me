// Mocks generated by Mockito 5.4.4 from annotations
// in rescue_me/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i10;

import 'package:cloud_firestore/cloud_firestore.dart' as _i22;
import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i13;
import 'package:firebase_storage/firebase_storage.dart' as _i4;
import 'package:flutter/material.dart' as _i8;
import 'package:geocoding/geocoding.dart' as _i5;
import 'package:image_picker/image_picker.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:rescue_me/core/errors/auth_error.dart' as _i12;
import 'package:rescue_me/core/errors/cloud_error.dart' as _i20;
import 'package:rescue_me/models/user.dart' as _i3;
import 'package:rescue_me/services/auth_service.dart' as _i11;
import 'package:rescue_me/services/location_service.dart' as _i21;
import 'package:rescue_me/services/media_service.dart' as _i17;
import 'package:rescue_me/services/network_service.dart' as _i14;
import 'package:rescue_me/services/notifications_service.dart' as _i23;
import 'package:rescue_me/services/open_mail_app_service.dart' as _i15;
import 'package:rescue_me/services/shared_preferences_service.dart' as _i16;
import 'package:rescue_me/services/sos_service.dart' as _i19;
import 'package:stacked_services/stacked_services.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOption_1<A> extends _i1.SmartFake implements _i2.Option<A> {
  _FakeOption_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i3.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReference_3 extends _i1.SmartFake implements _i4.Reference {
  _FakeReference_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlacemark_4 extends _i1.SmartFake implements _i5.Placemark {
  _FakePlacemark_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i6.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i8.GlobalKey<_i8.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i8.GlobalKey<_i8.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i6.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<T?>? navigateWithTransition<T>(
    _i8.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i8.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i6.Transition? transitionClass,
    _i6.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? replaceWithTransition<T>(
    _i8.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i8.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i6.Transition? transitionClass,
    _i6.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i8.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i8.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? navigateToView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i8.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i6.Transition? transition,
    _i6.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i8.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearStackAndShowView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearTillFirstAndShowView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i8.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i6.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i6.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i6.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i9.Future<_i6.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i6.SheetResponse<dynamic>?>.value(),
      ) as _i9.Future<_i6.SheetResponse<dynamic>?>);

  @override
  _i9.Future<_i6.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i10.Color? barrierColor = const _i10.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i9.Future<_i6.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i9.Future<_i6.SheetResponse<T>?>.value(),
      ) as _i9.Future<_i6.SheetResponse<T>?>);

  @override
  void completeSheet(_i6.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i6.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i6.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i8.Widget Function(
      _i8.BuildContext,
      _i6.DialogRequest<dynamic>,
      dynamic Function(_i6.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i6.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i10.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i10.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i6.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
      ) as _i9.Future<_i6.DialogResponse<dynamic>?>);

  @override
  _i9.Future<_i6.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i10.Color? barrierColor = const _i10.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i9.Future<_i6.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i9.Future<_i6.DialogResponse<T>?>.value(),
      ) as _i9.Future<_i6.DialogResponse<T>?>);

  @override
  _i9.Future<_i6.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i10.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i10.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i6.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
      ) as _i9.Future<_i6.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i6.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i11.AuthService {
  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isVerified => (super.noSuchMethod(
        Invocation.getter(#isVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasPhoneNumber => (super.noSuchMethod(
        Invocation.getter(#hasPhoneNumber),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasAvatar => (super.noSuchMethod(
        Invocation.getter(#hasAvatar),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> forgotPassword(
          String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Option<_i2.Either<_i12.AuthError, bool>>>
      checkEmailVerified() => (super.noSuchMethod(
            Invocation.method(
              #checkEmailVerified,
              [],
            ),
            returnValue:
                _i9.Future<_i2.Option<_i2.Either<_i12.AuthError, bool>>>.value(
                    _FakeOption_1<_i2.Either<_i12.AuthError, bool>>(
              this,
              Invocation.method(
                #checkEmailVerified,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i9.Future<_i2.Option<_i2.Either<_i12.AuthError, bool>>>.value(
                    _FakeOption_1<_i2.Either<_i12.AuthError, bool>>(
              this,
              Invocation.method(
                #checkEmailVerified,
                [],
              ),
            )),
          ) as _i9.Future<_i2.Option<_i2.Either<_i12.AuthError, bool>>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> register({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #name: name,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<void> verifyPhone({
    String? phoneNumber,
    required void Function(_i13.PhoneAuthCredential)? verificationCompleted,
    required void Function(_i13.FirebaseAuthException)? verificationFailed,
    required void Function(
      String,
      int?,
    )? codeSent,
    required void Function(String)? codeAutoRetrievalTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhone,
          [],
          {
            #phoneNumber: phoneNumber,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> updatePhone({
    required String? phone,
    required _i13.PhoneAuthCredential? credential,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhone,
          [],
          {
            #phone: phone,
            #credential: credential,
          },
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePhone,
            [],
            {
              #phone: phone,
              #credential: credential,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePhone,
            [],
            {
              #phone: phone,
              #credential: credential,
            },
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> sendVerificationEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationEmail,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendVerificationEmail,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendVerificationEmail,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> changeAvatar(
          String? photoURL) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeAvatar,
          [photoURL],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #changeAvatar,
            [photoURL],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #changeAvatar,
            [photoURL],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> changeName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeName,
          [name],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #changeName,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #changeName,
            [name],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> removeAvatar() =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAvatar,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #removeAvatar,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #removeAvatar,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> reauthenticate(
          String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticate,
          [password],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #reauthenticate,
            [password],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #reauthenticate,
            [password],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> updateEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [email],
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmail,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmail,
            [email],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>> updatePassword({
    required String? oldPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #oldPassword: oldPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
            _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #oldPassword: oldPassword,
              #newPassword: newPassword,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>.value(
                _FakeEither_0<_i12.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #oldPassword: oldPassword,
              #newPassword: newPassword,
            },
          ),
        )),
      ) as _i9.Future<_i2.Either<_i12.AuthError, _i2.Unit>>);

  @override
  _i9.Future<_i3.User> getUserById(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [userId],
        ),
        returnValue: _i9.Future<_i3.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUserById,
            [userId],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i3.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUserById,
            [userId],
          ),
        )),
      ) as _i9.Future<_i3.User>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i14.NetworkService {
  @override
  _i14.NetworkStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i14.NetworkStatus.connected,
        returnValueForMissingStub: _i14.NetworkStatus.connected,
      ) as _i14.NetworkStatus);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OpenMailAppService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenMailAppService extends _i1.Mock
    implements _i15.OpenMailAppService {
  @override
  _i9.Future<void> openMailApp() => (super.noSuchMethod(
        Invocation.method(
          #openMailApp,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [SharedPreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesService extends _i1.Mock
    implements _i16.SharedPreferencesService {
  @override
  bool get onboarded => (super.noSuchMethod(
        Invocation.getter(#onboarded),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<dynamic> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i9.Future<dynamic>.value(),
        returnValueForMissingStub: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  bool hasKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  dynamic read(String? key) => super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic readList(String? key) => super.noSuchMethod(
        Invocation.method(
          #readList,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<dynamic> write({
    required String? key,
    required dynamic value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i9.Future<dynamic>.value(),
        returnValueForMissingStub: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  _i9.Future<dynamic> writeList({
    required String? key,
    required List<String>? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeList,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i9.Future<dynamic>.value(),
        returnValueForMissingStub: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
}

/// A class which mocks [MediaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaService extends _i1.Mock implements _i17.MediaService {
  @override
  _i4.Reference get storageRef => (super.noSuchMethod(
        Invocation.getter(#storageRef),
        returnValue: _FakeReference_3(
          this,
          Invocation.getter(#storageRef),
        ),
        returnValueForMissingStub: _FakeReference_3(
          this,
          Invocation.getter(#storageRef),
        ),
      ) as _i4.Reference);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  dynamic getFileFromCloud(_i4.Reference? ref) => super.noSuchMethod(
        Invocation.method(
          #getFileFromCloud,
          [ref],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i18.XFile?> getImage({required bool? fromGallery}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [],
          {#fromGallery: fromGallery},
        ),
        returnValue: _i9.Future<_i18.XFile?>.value(),
        returnValueForMissingStub: _i9.Future<_i18.XFile?>.value(),
      ) as _i9.Future<_i18.XFile?>);

  @override
  _i9.Future<List<_i18.XFile>?> getMultiImages() => (super.noSuchMethod(
        Invocation.method(
          #getMultiImages,
          [],
        ),
        returnValue: _i9.Future<List<_i18.XFile>?>.value(),
        returnValueForMissingStub: _i9.Future<List<_i18.XFile>?>.value(),
      ) as _i9.Future<List<_i18.XFile>?>);

  @override
  dynamic upload(
    String? path,
    String? name,
    _i4.Reference? ref,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #upload,
          [
            path,
            name,
            ref,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SosService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSosService extends _i1.Mock implements _i19.SosService {
  @override
  _i9.Stream<_i3.EmergencyReport?> get emergency => (super.noSuchMethod(
        Invocation.getter(#emergency),
        returnValue: _i9.Stream<_i3.EmergencyReport?>.empty(),
        returnValueForMissingStub: _i9.Stream<_i3.EmergencyReport?>.empty(),
      ) as _i9.Stream<_i3.EmergencyReport?>);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i9.Future<List<_i3.EmergencyReport?>> getMySOSReports() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMySOSReports,
          [],
        ),
        returnValue: _i9.Future<List<_i3.EmergencyReport?>>.value(
            <_i3.EmergencyReport?>[]),
        returnValueForMissingStub: _i9.Future<List<_i3.EmergencyReport?>>.value(
            <_i3.EmergencyReport?>[]),
      ) as _i9.Future<List<_i3.EmergencyReport?>>);

  @override
  _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>> createEmergency(
          _i3.EmergencyReport? report) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEmergency,
          [report],
        ),
        returnValue: _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>.value(
            _FakeEither_0<_i20.CloudError, _i2.Unit>(
          this,
          Invocation.method(
            #createEmergency,
            [report],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>.value(
                _FakeEither_0<_i20.CloudError, _i2.Unit>(
          this,
          Invocation.method(
            #createEmergency,
            [report],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>> updateEmergency(
          _i3.EmergencyReport? report) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmergency,
          [report],
        ),
        returnValue: _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>.value(
            _FakeEither_0<_i20.CloudError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmergency,
            [report],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>.value(
                _FakeEither_0<_i20.CloudError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmergency,
            [report],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>);

  @override
  _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>> closeEmergency(
          _i3.EmergencyReport? report) =>
      (super.noSuchMethod(
        Invocation.method(
          #closeEmergency,
          [report],
        ),
        returnValue: _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>.value(
            _FakeEither_0<_i20.CloudError, _i2.Unit>(
          this,
          Invocation.method(
            #closeEmergency,
            [report],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>.value(
                _FakeEither_0<_i20.CloudError, _i2.Unit>(
          this,
          Invocation.method(
            #closeEmergency,
            [report],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i20.CloudError, _i2.Unit>>);

  @override
  _i9.Future<void> notifyEmergencyContacts(_i3.EmergencyReport? sos) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyEmergencyContacts,
          [sos],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i21.LocationService {
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i9.Future<void> determinePosition() => (super.noSuchMethod(
        Invocation.method(
          #determinePosition,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i5.Placemark> getLocationDetails(_i22.GeoPoint? geoPoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocationDetails,
          [geoPoint],
        ),
        returnValue: _i9.Future<_i5.Placemark>.value(_FakePlacemark_4(
          this,
          Invocation.method(
            #getLocationDetails,
            [geoPoint],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i5.Placemark>.value(_FakePlacemark_4(
          this,
          Invocation.method(
            #getLocationDetails,
            [geoPoint],
          ),
        )),
      ) as _i9.Future<_i5.Placemark>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NotificationsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsService extends _i1.Mock
    implements _i23.NotificationsService {
  @override
  _i9.Stream<List<_i3.Notification?>> getNotifications(
          [bool? isRead = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [isRead],
        ),
        returnValue: _i9.Stream<List<_i3.Notification?>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i3.Notification?>>.empty(),
      ) as _i9.Stream<List<_i3.Notification?>>);

  @override
  List<_i3.Notification?> mapStreamList(
          _i3.NotificationQuerySnapshot? snapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapStreamList,
          [snapshot],
        ),
        returnValue: <_i3.Notification?>[],
        returnValueForMissingStub: <_i3.Notification?>[],
      ) as List<_i3.Notification?>);
}
